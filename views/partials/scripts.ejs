
<script >

const socket = io(); // emitimos el evento "connection" que el socket server esta escuchando

const usuario = '<%= usuario %>'
  const typeUser = '<%= type %>'

socket.on('server-message', (messages) => {

    const messagesHtmlAdmin = messages
    .map(({email,timestamp,text,_id,responses}) => `
      <form method="post" action="/respond" class="pb-2">
  
        <strong class="text-primary">${email} </strong>
        <span class="text-danger">${timestamp}: </span>
        <em class="text-success">${text}</em>
        <input type="hidden" name="mensajeId" value=${_id}>
        <input placeholder="Respuesta" type="text" name="response">
        <button class="btn btn-primary" type="submit">Responder</button>
    </form>
    <div>
        ${responses.map((response) => 
          ` 
          <div class="pb-2 pl-5">
            <strong class="text-dark">Respuestas: </strong>
            <div class="pt-2">
              <strong class="text-primary">${response.email} </strong>
              <span class="text-danger">${response.timestamp}: </span>
              <em class="text-success">${response.response}</em>
            </div>
           
          
          </div>
          
          `
          )}
    </div>
    `)
    .join(' ');



    const messagesIDAdmin  = document.getElementById('messagesAdmin')
    
    if (messagesIDAdmin) {
      document.getElementById('messagesAdmin').innerHTML = messagesHtmlAdmin;
    }


 
    const messagesHtml = `<form id="form">` + messages
    .map(({email,timestamp,text,responses}) => `
      <div class="pb-2">
        <strong class="text-primary">${email} </strong>
        <span class="text-danger">${timestamp}: </span>
        <em class="text-success">${text}</em>

      </div>
      <div>
        ${responses.map((response) => 
          ` 
          <div class="pb-2 pl-5">
            <strong class="text-dark">Respuestas: </strong>
            <div class="pt-2">
              <strong class="text-primary">${response.email} </strong>
              <span class="text-danger">${response.timestamp}: </span>
              <em class="text-success">${response.response}</em>
            </div>
           
          
          </div>
          
          `
          )}
    </div>
    `)
    .join(' ') + `
              <input placeholder="Mensaje" type="text" name="mensaje" id="text">
              <button class="btn btn-primary" onclick="messageForm()">Enviar!</button>
            </form>
    `;



    const messagesID  = document.getElementById('messages')
    
    if (messagesID) {
      document.getElementById('messages').innerHTML = messagesHtml;
    }

  

  const clientMessages = messages.filter(item => item.email === usuario)

  const clientMessagesHtml = clientMessages
    .map(({email, timestamp,text,responses}) => `
      <div class="pb-2">
        <strong class="text-primary">${email} </strong>
        <span class="text-danger">${timestamp}: </span>
        <em class="text-success">${text}</em>

      </div>
      <div>
        ${responses.map((response) => 
          ` 
          <div class="pb-2 pl-5">
            <strong class="text-dark">Respuestas: </strong>
            <div class="pt-2">
              <strong class="text-primary">${response.email} </strong>
              <span class="text-danger">${response.timestamp}: </span>
              <em class="text-success">${response.response}</em>
            </div>
           
          
          </div>
          
          `
          )}
    </div>
    `)
    .join(' ');
    const clientMessagesID  = document.getElementById('clientMessages')
    
    if (clientMessagesID) {
      document.getElementById('clientMessages').innerHTML = clientMessagesHtml;
    }
    
 

});




const form = document.getElementById('form');

function messageForm() {


  const email = usuario;

  const text = document.getElementById('text').value;

  const type = "usuario"

  const message = {  email, type, text}
  socket.emit('new-message', message);
 
  
};



</script>
